using DinkToPdf;
using DinkToPdf.Contracts;
using System.Runtime.InteropServices;

namespace HtmlToPdfConverter
{
    public class HtmlToPdfService
    {
        private readonly IConverter _converter;

        public HtmlToPdfService()
        {
            if (!CheckForRequiredLibrary())
            {
                throw new FileNotFoundException("Required wkhtmltopdf library (libwkhtmltox.dll) not found! Please download wkhtmltopdf and place libwkhtmltox.dll in the same folder as executable or project root folder.");
            }

            try
            {
                _converter = new SynchronizedConverter(new PdfTools());
            }
            catch (Exception ex)
            {
                throw new InvalidOperationException($"Failed to initialize PDF converter: {ex.Message}. Try running as Administrator.");
            }
        }

        /// <summary>
        /// Converts HTML content to PDF bytes
        /// </summary>
        /// <param name="htmlContent">The HTML content as string</param>
        /// <returns>PDF file as byte array</returns>
        public byte[] ConvertHtmlToPdf(string htmlContent)
        {
            if (string.IsNullOrWhiteSpace(htmlContent))
            {
                throw new ArgumentException("HTML content cannot be null or empty", nameof(htmlContent));
            }

            try
            {
                // Create PDF document
                var doc = new HtmlToPdfDocument()
                {
                    GlobalSettings = {
                        ColorMode = ColorMode.Color,
                        Orientation = Orientation.Portrait,
                        PaperSize = PaperKind.A4,
                        Margins = new MarginSettings() { Top = 10, Bottom = 10, Left = 10, Right = 10 }
                    },
                    Objects = {
                        new ObjectSettings() {
                            PagesCount = true,
                            HtmlContent = htmlContent,
                            WebSettings = { DefaultEncoding = "utf-8" }
                        }
                    }
                };

                // Convert and return bytes
                return _converter.Convert(doc);
            }
            catch (Exception ex)
            {
                throw new InvalidOperationException($"PDF conversion failed: {ex.Message}", ex);
            }
        }

        /// <summary>
        /// Converts HTML file to PDF bytes
        /// </summary>
        /// <param name="htmlFilePath">Path to the HTML file</param>
        /// <returns>PDF file as byte array</returns>
        public byte[] ConvertHtmlFileToPdf(string htmlFilePath)
        {
            if (!File.Exists(htmlFilePath))
            {
                throw new FileNotFoundException($"HTML file not found: {htmlFilePath}");
            }

            string htmlContent = File.ReadAllText(htmlFilePath);
            return ConvertHtmlToPdf(htmlContent);
        }

        private static bool CheckForRequiredLibrary()
        {
            string libraryName = "libwkhtmltox.dll";
            string[] searchPaths = {
                Path.Combine(AppDomain.CurrentDomain.BaseDirectory, libraryName),
                Path.Combine(Directory.GetCurrentDirectory(), libraryName)
            };

            foreach (string path in searchPaths)
            {
                if (File.Exists(path))
                {
                    return true;
                }
            }

            return false;
        }
    }
}
